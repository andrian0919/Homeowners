@model IEnumerable<HomeownersSubdivision.Models.Payment>
@using HomeownersSubdivision.Models

@{
    ViewData["Title"] = "Payment History";
}

@await Html.PartialAsync("_LuxuryBackground")

<style>
    .main-heading {
        display: flex;
        align-items: center;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        background: linear-gradient(to right, #1a1a2e, #3366FF);
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .main-heading i {
        font-size: 1.75rem;
        margin-right: 0.75rem;
        color: #6889F7;
    }
</style>

<div class="container mx-auto px-4 py-6">
    <div class="bg-white rounded-lg shadow-md p-6">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
            <div class="main-heading">
                <i class="bi bi-clock-history"></i> Payment History
            </div>
            <div class="mt-4 md:mt-0">
                <a href="@Url.Action("MyBills", "Billing")" class="btn-luxury hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 flex items-center">
                    <i class="bi bi-arrow-left mr-2"></i> Back to Bills
                </a>
            </div>
        </div>

        <p class="text-gray-600 mb-6">View all your previous payments and transactions.</p>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
                <p>@TempData["SuccessMessage"]</p>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
                <p>@TempData["ErrorMessage"]</p>
            </div>
        }

        <!-- Payment Summary -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            <div class="bg-blue-50 p-4 rounded-lg">
                <div class="text-sm text-blue-800 mb-1">Total Payments</div>
                <div class="text-2xl font-bold">@ViewBag.TotalPayments</div>
            </div>
            <div class="bg-green-50 p-4 rounded-lg">
                <div class="text-sm text-green-800 mb-1">Total Amount Paid</div>
                <div class="text-2xl font-bold">$@ViewBag.TotalAmountPaid.ToString("0.00")</div>
            </div>
            <div class="bg-purple-50 p-4 rounded-lg">
                <div class="text-sm text-purple-800 mb-1">Payments This Month</div>
                <div class="text-2xl font-bold">@ViewBag.PaymentsThisMonth</div>
            </div>
        </div>

        <!-- Filter Form -->
        <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 mb-6">
            <div class="bg-gradient-to-r from-blue-800 to-blue-600 px-6 py-4 border-b border-gray-200">
                <h5 class="font-semibold text-white flex items-center">
                    <i class="bi bi-funnel mr-2"></i> Filter Payments
                </h5>
            </div>
            <div class="p-6">
            <form method="get" id="filterForm" class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label for="Status" class="block text-sm font-medium text-gray-700 mb-1">Payment Status</label>
                    <select name="Status" id="Status" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        <option value="">All Statuses</option>
                        <option value="Completed" selected="@(ViewBag.Status == "Completed")">Completed</option>
                        <option value="Pending" selected="@(ViewBag.Status == "Pending")">Pending</option>
                        <option value="Failed" selected="@(ViewBag.Status == "Failed")">Failed</option>
                        <option value="Refunded" selected="@(ViewBag.Status == "Refunded")">Refunded</option>
                    </select>
                </div>
                <div>
                    <label for="FromDate" class="block text-sm font-medium text-gray-700 mb-1">From Date</label>
                    <input type="date" name="FromDate" id="FromDate" value="@ViewBag.FromDate" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                </div>
                <div>
                    <label for="ToDate" class="block text-sm font-medium text-gray-700 mb-1">To Date</label>
                    <input type="date" name="ToDate" id="ToDate" value="@ViewBag.ToDate" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                </div>
                <div class="flex items-end">
                    <div class="flex gap-2 w-full">
                            <button type="submit" class="flex-1 btn-luxury hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 flex items-center justify-center">
                            <i class="bi bi-filter mr-1"></i> Filter
                        </button>
                        <a href="@Url.Action("PaymentHistory", "Payments")" class="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 py-2 px-4 rounded text-center">
                            Clear
                        </a>
                    </div>
                </div>
            </form>
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="bg-gray-50 rounded-lg p-8 text-center">
                <i class="bi bi-credit-card text-gray-400 text-5xl mb-4"></i>
                <h3 class="text-lg font-medium text-gray-800 mb-2">No Payments Found</h3>
                <p class="text-gray-600 mb-4">
                    @if (!string.IsNullOrEmpty(ViewBag.Status) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                    {
                        <span>No payments match your filter criteria. Try different filters or clear them to see all payments.</span>
                    }
                    else
                    {
                        <span>You haven't made any payments yet.</span>
                    }
                </p>
                <a href="@Url.Action("MyBills", "Billing")" class="inline-block bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded">
                    View My Bills
                </a>
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gradient-to-r from-blue-800 to-blue-600 text-white">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Receipt #</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Date</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Amount</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Bill</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Method</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Status</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var payment in Model)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="font-medium text-gray-900">@payment.ReceiptNumber</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="text-gray-500">@payment.PaymentDate.ToString("MM/dd/yyyy")</span>
                                    <div class="text-xs text-gray-400">@payment.PaymentDate.ToString("h:mm tt")</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="font-medium @(payment.Status == "Refunded" ? "line-through text-gray-500" : "text-gray-900")">
                                        $@payment.Amount.ToString("0.00")
                                    </span>
                                    @if (payment.Status == "Refunded")
                                    {
                                        <div class="text-xs text-red-500">Refunded</div>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (payment.Bill != null)
                                    {
                                        <span class="text-gray-900">@payment.Bill.Description</span>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">Custom Payment</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (payment.PaymentMethod != null)
                                    {
                                        @if (payment.PaymentMethod.Type == PaymentMethodType.CreditCard || payment.PaymentMethod.Type == PaymentMethodType.DebitCard)
                                        {
                                            <div class="flex items-center">
                                                <i class="bi bi-credit-card text-blue-600 mr-2"></i>
                                                <span>•••• @payment.PaymentMethod.CardLastFour</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="flex items-center">
                                                <i class="bi bi-bank text-green-600 mr-2"></i>
                                                <span>•••• @payment.PaymentMethod.AccountNumber?.Substring(Math.Max(0, payment.PaymentMethod.AccountNumber.Length - 4))</span>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">N/A</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @switch (payment.Status)
                                    {
                                        case "Completed":
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                Completed
                                            </span>
                                            break;
                                        case "Pending":
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                                Pending
                                            </span>
                                            break;
                                        case "Failed":
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                                Failed
                                            </span>
                                            break;
                                        case "Refunded":
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-purple-100 text-purple-800">
                                                Refunded
                                            </span>
                                            break;
                                        default:
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                                @payment.Status
                                            </span>
                                            break;
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a href="@Url.Action("ViewReceipt", "Payments", new { id = payment.Id })" class="text-blue-600 hover:text-blue-900 mr-3">
                                        <i class="bi bi-receipt"></i> Receipt
                                    </a>
                                    @if (payment.Status == "Completed" && !payment.IsRefunded)
                                    {
                                        <a href="@Url.Action("RequestRefund", "Payments", new { id = payment.Id })" class="text-red-600 hover:text-red-900">
                                            <i class="bi bi-arrow-return-left"></i> Refund
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <div class="flex justify-between items-center mt-6">
                    <div class="text-sm text-gray-500">
                        Showing page @ViewBag.CurrentPage of @ViewBag.TotalPages
                    </div>
                    <div class="flex gap-2">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <a href="@Url.Action("PaymentHistory", "Payments", new { page = ViewBag.CurrentPage - 1, Status = ViewBag.Status, FromDate = ViewBag.FromDate, ToDate = ViewBag.ToDate })"
                               class="px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                                Previous
                            </a>
                        }
                        else
                        {
                            <button disabled class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm font-medium text-gray-400 cursor-not-allowed">
                                Previous
                            </button>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <a href="@Url.Action("PaymentHistory", "Payments", new { page = ViewBag.CurrentPage + 1, Status = ViewBag.Status, FromDate = ViewBag.FromDate, ToDate = ViewBag.ToDate })"
                               class="px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                                Next
                            </a>
                        }
                        else
                        {
                            <button disabled class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm font-medium text-gray-400 cursor-not-allowed">
                                Next
                            </button>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Auto-submit form when Status changes
            document.getElementById('Status').addEventListener('change', function() {
                document.getElementById('filterForm').submit();
            });
        });
    </script>
} 