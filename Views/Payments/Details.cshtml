@model HomeownersSubdivision.Models.Payment
@using HomeownersSubdivision.Models
@{
    ViewData["Title"] = "Payment Details";
}

<div class="container mx-auto px-4 py-8 max-w-5xl">
    <!-- Success Message -->
    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded-lg" role="alert">
            <div class="flex items-center">
                <i class="bi bi-check-circle-fill mr-2"></i>
                <p>@TempData["SuccessMessage"]</p>
            </div>
        </div>
    }

    <!-- Main Content -->
    <div class="bg-white rounded-lg shadow-md">
        <!-- Header -->
        <div class="p-6 border-b border-gray-200">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
                <div>
                    <h1 class="text-2xl font-bold text-gray-800 mb-1">Payment Details</h1>
                    <p class="text-gray-600">Receipt #@Model.ReceiptNumber</p>
                </div>
                <div class="mt-4 md:mt-0">
                    @{
                        string statusClass = Model.Status switch
                        {
                            "Completed" => "bg-green-100 text-green-800",
                            "Pending" => "bg-yellow-100 text-yellow-800",
                            "Failed" => "bg-red-100 text-red-800",
                            "Refunded" => "bg-purple-100 text-purple-800",
                            _ => "bg-gray-100 text-gray-800"
                        };
                        
                        string statusIcon = Model.Status switch
                        {
                            "Completed" => "bi bi-check-circle",
                            "Pending" => "bi bi-hourglass-split",
                            "Failed" => "bi bi-x-circle",
                            "Refunded" => "bi bi-arrow-return-left",
                            _ => "bi bi-question-circle"
                        };
                    }
                    <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium @statusClass">
                        <i class="@statusIcon mr-1.5"></i> @Model.Status
                    </span>
                </div>
            </div>
        </div>

        <!-- Content Grid -->
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Payment Information -->
                <div class="space-y-6">
                    <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                        <h2 class="text-lg font-semibold text-gray-800 mb-4">Payment Information</h2>
                        <div class="space-y-3">
                            <div class="flex justify-between items-center">
                                <span class="text-gray-600">Date:</span>
                                <span class="text-gray-800">@Model.PaymentDate.ToString("MMM dd, yyyy hh:mm tt")</span>
                            </div>
                            <div class="flex justify-between items-center">
                                <span class="text-gray-600">Amount:</span>
                                <span class="text-lg font-semibold text-green-600">$@Model.Amount.ToString("N2")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.TransactionId))
                            {
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Transaction ID:</span>
                                    <span class="text-gray-800 font-mono">@Model.TransactionId</span>
                                </div>
                            }
                            @if (Model.ProcessedDate.HasValue)
                            {
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Processed:</span>
                                    <span class="text-gray-800">@Model.ProcessedDate.Value.ToString("MMM dd, yyyy hh:mm tt")</span>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Payment Method -->
                    <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                        <h2 class="text-lg font-semibold text-gray-800 mb-4">Payment Method</h2>
                        @if (Model.PaymentMethod != null)
                        {
                            <div class="flex items-center">
                                @{
                                    var (icon, color) = Model.PaymentMethod.Type switch
                                    {
                                        PaymentMethodType.CreditCard or PaymentMethodType.DebitCard 
                                            => ("bi bi-credit-card", "text-blue-600"),
                                        PaymentMethodType.GCash 
                                            => ("bi bi-wallet2", "text-purple-600"),
                                        _ => ("bi bi-bank", "text-green-600")
                                    };
                                }
                                <i class="@icon @color text-2xl mr-3"></i>
                                <div>
                                    <div class="font-medium text-gray-800">@Model.PaymentMethod.DisplayName</div>
                                    <div class="text-sm text-gray-600">@Model.PaymentMethod.Type.ToString()</div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-600">Payment method information not available</p>
                        }
                    </div>
                </div>

                <!-- Bill Information -->
                <div class="space-y-6">
                    @if (Model.Bill != null)
                    {
                        <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                            <h2 class="text-lg font-semibold text-gray-800 mb-4">Bill Information</h2>
                            <div class="space-y-3">
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Bill Type:</span>
                                    <span class="text-gray-800">@Model.Bill.Type</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Description:</span>
                                    <span class="text-gray-800">@Model.Bill.Description</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Due Date:</span>
                                    <span class="text-gray-800">@Model.Bill.DueDate.ToString("MMM dd, yyyy")</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Total Amount:</span>
                                    <span class="text-gray-800 font-semibold">$@Model.Bill.Amount.ToString("N2")</span>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Refund Information -->
                    @if (Model.IsRefunded)
                    {
                        <div class="bg-red-50 rounded-lg p-4 border border-red-200">
                            <h2 class="text-lg font-semibold text-red-800 mb-4">Refund Information</h2>
                            <div class="space-y-3">
                                <div class="flex justify-between items-center">
                                    <span class="text-red-600">Refund Date:</span>
                                    <span class="text-red-800">@(Model.RefundDate?.ToString("MMM dd, yyyy") ?? "N/A")</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-red-600">Refund Amount:</span>
                                    <span class="text-red-800 font-semibold">$@(Model.RefundAmount?.ToString("N2") ?? "0.00")</span>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.RefundReason))
                                {
                                    <div>
                                        <span class="text-red-600">Reason:</span>
                                        <p class="text-red-800 mt-1">@Model.RefundReason</p>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Notes Section -->
            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div class="mt-6">
                    <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                        <h2 class="text-lg font-semibold text-gray-800 mb-3">Notes</h2>
                        <p class="text-gray-700">@Model.Notes</p>
                    </div>
                </div>
            }
        </div>

        <!-- Action Buttons -->
        <div class="bg-gray-50 p-6 border-t border-gray-200">
            <div class="flex flex-wrap gap-3 justify-between">
                <div class="flex flex-wrap gap-2">
                    <a href="@Url.Action("PaymentHistory", "Payments")" 
                       class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition duration-150">
                        <i class="bi bi-arrow-left mr-2"></i>
                        Back to History
                    </a>
                    @if (Model.Status == "Completed" && !Model.IsRefunded)
                    {
                        <a href="@Url.Action("PrintReceipt", new { id = Model.Id })" 
                           class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition duration-150">
                            <i class="bi bi-printer mr-2"></i>
                            Print Receipt
                        </a>
                    }
                </div>
                
                @if (Model.Status == "Completed" && !Model.IsRefunded)
                {
                    <a href="@Url.Action("MakePayment", new { returnUrl = Url.Action("PaymentHistory") })" 
                       class="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg text-sm font-medium hover:bg-green-700 transition duration-150">
                        <i class="bi bi-credit-card mr-2"></i>
                        Make Another Payment
                    </a>
                }
            </div>
        </div>
    </div>
</div> 