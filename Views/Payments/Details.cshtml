@model HomeownersSubdivision.Models.Payment
@using HomeownersSubdivision.Models
@{
    ViewData["Title"] = "Payment Details";
}

<div class="container mx-auto py-6">
    <div class="mb-4">
        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
        {
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
                <div class="flex items-center">
                    <i class="bi bi-check-circle-fill me-2"></i>
                    <p>@TempData["SuccessMessage"]</p>
                </div>
            </div>
        }
    </div>

    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <!-- Header with payment status -->
        <div class="p-6 border-b border-gray-200">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
                <div>
                    <h1 class="text-2xl font-bold text-gray-800">Payment Details</h1>
                    <p class="text-gray-600">Receipt #@Model.ReceiptNumber</p>
                </div>
                <div class="mt-3 md:mt-0">
                    @{
                        string statusClass = Model.Status switch
                        {
                            "Completed" => "bg-green-100 text-green-800 border-green-200",
                            "Pending" => "bg-yellow-100 text-yellow-800 border-yellow-200",
                            "Failed" => "bg-red-100 text-red-800 border-red-200",
                            "Refunded" => "bg-gray-100 text-gray-800 border-gray-200",
                            _ => "bg-gray-100 text-gray-800 border-gray-200"
                        };
                        
                        string statusIcon = Model.Status switch
                        {
                            "Completed" => "bi bi-check-circle",
                            "Pending" => "bi bi-hourglass-split",
                            "Failed" => "bi bi-x-circle",
                            "Refunded" => "bi bi-arrow-return-left",
                            _ => "bi bi-question-circle"
                        };
                    }
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border @statusClass">
                        <i class="@statusIcon me-1"></i> @Model.Status
                    </span>
                </div>
            </div>
        </div>

        <!-- Payment information -->
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Left column -->
                <div>
                    <h2 class="text-lg font-semibold text-gray-700 mb-3">Payment Information</h2>
                    <div class="space-y-3">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Date:</span>
                            <span class="font-medium">@Model.PaymentDate.ToString("MM/dd/yyyy hh:mm tt")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Amount:</span>
                            <span class="font-medium text-green-600">$@Model.Amount.ToString("N2")</span>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.TransactionId))
                        {
                            <div class="flex justify-between">
                                <span class="text-gray-600">Transaction ID:</span>
                                <span class="font-medium">@Model.TransactionId</span>
                            </div>
                        }
                        @if (Model.ProcessedDate.HasValue)
                        {
                            <div class="flex justify-between">
                                <span class="text-gray-600">Processed Date:</span>
                                <span class="font-medium">@Model.ProcessedDate.Value.ToString("MM/dd/yyyy hh:mm tt")</span>
                            </div>
                        }
                        @if (Model.IsRefunded)
                        {
                            <div class="mt-4 bg-gray-50 p-3 rounded border border-gray-200">
                                <h3 class="text-md font-semibold text-gray-700 mb-2">Refund Information</h3>
                                <div class="space-y-2">
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Refund Date:</span>
                                        <span class="font-medium">@(Model.RefundDate?.ToString("MM/dd/yyyy") ?? "N/A")</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Refund Amount:</span>
                                        <span class="font-medium">$@(Model.RefundAmount?.ToString("N2") ?? "0.00")</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.RefundReason))
                                    {
                                        <div>
                                            <span class="text-gray-600">Reason:</span>
                                            <p class="font-medium mt-1">@Model.RefundReason</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Right column -->
                <div>
                    @if (Model.Bill != null)
                    {
                        <h2 class="text-lg font-semibold text-gray-700 mb-3">Bill Information</h2>
                        <div class="mb-4 bg-gray-50 p-4 rounded border border-gray-200">
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Bill Type:</span>
                                <span class="font-medium">@Model.Bill.Type</span>
                            </div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Description:</span>
                                <span class="font-medium">@Model.Bill.Description</span>
                            </div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Due Date:</span>
                                <span class="font-medium">@Model.Bill.DueDate.ToString("MM/dd/yyyy")</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Total Amount:</span>
                                <span class="font-medium">$@Model.Bill.Amount.ToString("N2")</span>
                            </div>
                        </div>
                    }

                    <h2 class="text-lg font-semibold text-gray-700 mb-3">Payment Method</h2>
                    <div class="bg-gray-50 p-4 rounded border border-gray-200">
                        @if (Model.PaymentMethod != null)
                        {
                            <div class="flex items-center mb-3">
                                @if (Model.PaymentMethod.Type == PaymentMethodType.CreditCard || Model.PaymentMethod.Type == PaymentMethodType.DebitCard)
                                {
                                    <i class="bi bi-credit-card text-blue-600 text-xl me-3"></i>
                                }
                                else if (Model.PaymentMethod.Type == PaymentMethodType.GCash)
                                {
                                    <i class="bi bi-wallet2 text-purple-600 text-xl me-3"></i>
                                }
                                else
                                {
                                    <i class="bi bi-bank text-green-600 text-xl me-3"></i>
                                }
                                <div>
                                    <div class="font-medium">
                                        @Model.PaymentMethod.DisplayName
                                    </div>
                                    <div class="text-sm text-gray-500">
                                        @Model.PaymentMethod.Type.ToString()
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-600">Payment method information not available</p>
                        }
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div class="mt-6">
                    <h2 class="text-lg font-semibold text-gray-700 mb-3">Notes</h2>
                    <div class="bg-gray-50 p-4 rounded border border-gray-200">
                        <p>@Model.Notes</p>
                    </div>
                </div>
            }
        </div>

        <!-- Actions -->
        <div class="bg-gray-50 p-6 border-t border-gray-200">
            <div class="flex flex-wrap gap-3 justify-between">
                <div>
                    <a href="@Url.Action("PaymentHistory", "Payments")" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                        <i class="bi bi-arrow-left me-2"></i>
                        Back to Payment History
                    </a>
                    @if (Model.Status == "Completed" && !Model.IsRefunded)
                    {
                        <a href="@Url.Action("PrintReceipt", new { id = Model.Id })" class="inline-flex items-center px-4 py-2 ms-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                            <i class="bi bi-printer me-2"></i>
                            Print Receipt
                        </a>
                    }
                </div>
                
                @if (Model.Status == "Completed" && !Model.IsRefunded)
                {
                    <a href="@Url.Action("MakePayment", new { returnUrl = Url.Action("PaymentHistory") })" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700">
                        <i class="bi bi-credit-card me-2"></i>
                        Make Another Payment
                    </a>
                }
            </div>
        </div>
    </div>
</div> 