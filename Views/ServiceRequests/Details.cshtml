@model HomeownersSubdivision.ViewModels.ServiceRequestDetailsViewModel

@{
    ViewData["Title"] = "Service Request Details";
}

@await Html.PartialAsync("_LuxuryBackground")


<div class="container mx-auto px-4 py-8 luxury-page-container">
    <div class="mb-6">
        <nav class="flex mb-3" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="@Url.Action("Index", "Home")" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600">
                        <svg class="mr-2 w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                        </svg>
                        Home
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <a href="@Url.Action("Index", "ServiceRequests")" class="ml-1 text-sm font-medium text-gray-700 hover:text-indigo-600 md:ml-2">
                            Service Requests
                        </a>
                    </div>
                </li>
                <li aria-current="page">
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2">Request #@Model.ServiceRequest.Id</span>
                    </div>
                </li>
            </ol>
        </nav>

        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-bold text-white">@Model.ServiceRequest.Title</h1>
            <div class="flex space-x-2">
                @if (User.IsInRole("Administrator") || User.IsInRole("Staff"))
                {
                    <a href="@Url.Action("Edit", new { id = Model.ServiceRequest.Id })" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                        </svg>
                        Edit
                    </a>
                    
                    @if (User.IsInRole("Administrator"))
                    {
                        <form asp-action="Delete" asp-route-id="@Model.ServiceRequest.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this request?');" class="inline-block">
                            <button type="submit" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                <svg class="-ml-1 mr-2 h-5 w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                                Delete
                            </button>
                        </form>
                    }
                }
                <a href="@Url.Action("Index")" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    Back to List
                </a>
            </div>
        </div>
    </div>

    <div class="luxury-content-card">
        <div class="px-4 py-5 sm:px-6 bg-gray-50">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Request Details</h3>
            <p class="mt-1 max-w-2xl text-sm text-gray-500">Details about service request #@Model.ServiceRequest.Id</p>
        </div>
        <div class="border-t border-gray-200">
            <dl>
                <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Status</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            @(Model.ServiceRequest.Status == HomeownersSubdivision.Models.ServiceRequestStatus.New ? "bg-blue-100 text-blue-800" : 
                              Model.ServiceRequest.Status == HomeownersSubdivision.Models.ServiceRequestStatus.InProgress ? "bg-yellow-100 text-yellow-800" : 
                              Model.ServiceRequest.Status == HomeownersSubdivision.Models.ServiceRequestStatus.Completed ? "bg-green-100 text-green-800" : 
                              "bg-red-100 text-red-800")">
                            @Model.ServiceRequest.StatusDisplayName
                        </span>
                        
                        @if (User.IsInRole("Administrator") || User.IsInRole("Staff"))
                        {
                            <div class="mt-2">
                                <form asp-action="ChangeStatus" asp-route-id="@Model.ServiceRequest.Id" method="post" class="flex">
                                    <select name="status" class="rounded-l-md border-r-0 border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                        @foreach (var item in ViewBag.StatusSelectList)
                                        {
                                            <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                                        }
                                    </select>
                                    <input type="text" name="notes" placeholder="Add notes (optional)" class="flex-1 border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                                    <button type="submit" class="btn-luxury hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Update
                                    </button>
                                </form>
                            </div>
                        }
                    </dd>
                </div>
                <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Request Type</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@Model.ServiceRequest.RequestTypeDisplayName</dd>
                </div>
                <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Priority</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            @(Model.ServiceRequest.Priority == HomeownersSubdivision.Models.Priority.Low ? "bg-gray-100 text-gray-800" : 
                              Model.ServiceRequest.Priority == HomeownersSubdivision.Models.Priority.Medium ? "bg-blue-100 text-blue-800" : 
                              "bg-red-100 text-red-800")">
                            @Model.ServiceRequest.PriorityDisplayName
                        </span>
                    </dd>
                </div>
                <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Submitted By</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@Model.ServiceRequest.HomeownerName</dd>
                </div>
                <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Submission Date</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@Model.ServiceRequest.SubmissionDate.ToString("MMM dd, yyyy HH:mm")</dd>
                </div>
                <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Assigned To</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                        @Model.ServiceRequest.AssignedToName
                        
                        @if (User.IsInRole("Administrator") || User.IsInRole("Staff"))
                        {
                            <div class="mt-2">
                                <form asp-action="Assign" asp-route-id="@Model.ServiceRequest.Id" method="post" class="flex">
                                    <select name="staffId" class="flex-1 rounded-l-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                        @foreach (var item in ViewBag.StaffMembers)
                                        {
                                            <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                                        }
                                    </select>
                                    <button type="submit" class="btn-luxury hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Assign
                                    </button>
                                </form>
                            </div>
                        }
                    </dd>
                </div>
                @if (Model.ServiceRequest.CompletionDate.HasValue)
                {
                    <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                        <dt class="text-sm font-medium text-gray-500">Completion Date</dt>
                        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@Model.ServiceRequest.CompletionDate.Value.ToString("MMM dd, yyyy HH:mm")</dd>
                    </div>
                }
                <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="text-sm font-medium text-gray-500">Description</dt>
                    <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2 whitespace-pre-line">@Model.ServiceRequest.Description</dd>
                </div>
                @if (!string.IsNullOrEmpty(Model.ServiceRequest.ImageUrl))
                {
                    <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                        <dt class="text-sm font-medium text-gray-500">Image</dt>
                        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                            <div class="aspect-w-16 aspect-h-9 max-w-lg">
                                <img src="@Model.ServiceRequest.ImageUrl" alt="Request Image" class="object-cover rounded-lg shadow-sm" />
                            </div>
                        </dd>
                    </div>
                }
            </dl>
        </div>
    </div>

    @if (Model.Updates.Count > 0)
    {
        <div class="luxury-content-card">
            <div class="px-4 py-5 sm:px-6 bg-gray-50">
                <h3 class="text-lg leading-6 font-medium text-gray-900">History</h3>
                <p class="mt-1 max-w-2xl text-sm text-gray-500">Updates and activity history</p>
            </div>
            <div class="border-t border-gray-200">
                <ul class="divide-y divide-gray-200">
                    @foreach (var update in Model.Updates)
                    {
                        <li class="px-4 py-3">
                            <div class="flex items-start">
                                <div class="min-w-0 flex-1">
                                    <p class="text-sm font-medium text-gray-900">
                                        @update.UpdatedByName
                                    </p>
                                    <p class="text-sm text-gray-500">
                                        @update.UpdatedAt.ToString("MMM dd, yyyy HH:mm")
                                    </p>
                                    @if (update.OldStatus != update.NewStatus)
                                    {
                                        <div class="mt-1 text-sm">
                                            <span>Changed status from </span>
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                                @(update.OldStatus == HomeownersSubdivision.Models.ServiceRequestStatus.New ? "bg-blue-100 text-blue-800" : 
                                                update.OldStatus == HomeownersSubdivision.Models.ServiceRequestStatus.InProgress ? "bg-yellow-100 text-yellow-800" : 
                                                update.OldStatus == HomeownersSubdivision.Models.ServiceRequestStatus.Completed ? "bg-green-100 text-green-800" : 
                                                "bg-red-100 text-red-800")">
                                                @update.OldStatus
                                            </span>
                                            <span> to </span>
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                                @(update.NewStatus == HomeownersSubdivision.Models.ServiceRequestStatus.New ? "bg-blue-100 text-blue-800" : 
                                                update.NewStatus == HomeownersSubdivision.Models.ServiceRequestStatus.InProgress ? "bg-yellow-100 text-yellow-800" : 
                                                update.NewStatus == HomeownersSubdivision.Models.ServiceRequestStatus.Completed ? "bg-green-100 text-green-800" : 
                                                "bg-red-100 text-red-800")">
                                                @update.NewStatus
                                            </span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(update.Notes))
                                    {
                                        <p class="mt-2 text-sm text-gray-700 whitespace-pre-line">@update.Notes</p>
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
</div> 
