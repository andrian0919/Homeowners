@model HomeownersSubdivision.Models.CreateReservationViewModel
@{
    ViewData["Title"] = "Create Reservation";
}

<div class="max-w-3xl mx-auto px-4 py-8">
    <div class="bg-white rounded-lg shadow-lg">
        <div class="border-b px-6 py-4 bg-blue-600 rounded-t-lg">
            <h3 class="text-xl font-bold text-white flex items-center"><i class="fas fa-calendar-plus mr-2"></i>New Facility Reservation</h3>
        </div>
        <div class="px-6 py-6">
            <form asp-action="Create" id="reservationForm" class="space-y-6">
                <div asp-validation-summary="ModelOnly" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4"></div>

                <div>
                    <label asp-for="FacilityId" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                        <i class="fas fa-building mr-1"></i> Select Facility
                    </label>
                    <select asp-for="FacilityId" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" id="facilitySelect">
                        @foreach (var facility in Model.AvailableFacilities)
                        {
                            <option value="@facility.Id" data-hourly-rate="@facility.HourlyRate" data-opening="@facility.OpeningTime.Hours.ToString("00"):@facility.OpeningTime.Minutes.ToString("00")" data-closing="@facility.ClosingTime.Hours.ToString("00"):@facility.ClosingTime.Minutes.ToString("00")">
                                @switch (facility.Type)
                                {
                                    case FacilityType.SwimmingPool:
                                        <text>üèä </text>
                                        break;
                                    case FacilityType.SportsCourt:
                                        <text>üèÄ </text>
                                        break;
                                    case FacilityType.FunctionHall:
                                        <text>üè¢ </text>
                                        break;
                                    case FacilityType.Other:
                                    default:
                                        <text>üèõÔ∏è </text>
                                        break;
                                }
                                @facility.Name (@facility.Type) - @string.Format("{0:C}", facility.HourlyRate)/hour
                            </option>
                        }
                    </select>
                    <span asp-validation-for="FacilityId" class="text-red-500 text-sm mt-1"></span>
                </div>

                <div class="bg-blue-50 border-l-4 border-blue-400 text-blue-800 p-4 mb-4 rounded shadow-sm">
                    <div class="mb-2 text-sm" id="facilityHours"></div>
                </div>

                <h5 class="text-lg font-semibold text-gray-800 mt-4 mb-3 border-b pb-2 flex items-center">
                    <i class="fas fa-calendar-day mr-2"></i> Date and Time
                </h5>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
                    <div>
                        <label asp-for="ReservationDate" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                            <i class="fas fa-calendar mr-1"></i> Date
                        </label>
                        <input asp-for="ReservationDate" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" type="date" id="reservationDate" min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="ReservationDate" class="text-red-500 text-sm mt-1"></span>
                        <div class="text-xs text-gray-500 mt-1">Select a date for your reservation (must be at least tomorrow)</div>
                    </div>
                    <div>
                        <label asp-for="NumberOfGuests" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                            <i class="fas fa-users mr-1"></i> Number of Guests
                        </label>
                        <input asp-for="NumberOfGuests" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" type="number" min="1" />
                        <span asp-validation-for="NumberOfGuests" class="text-red-500 text-sm mt-1"></span>
                        <div class="text-xs text-gray-500 mt-1">Enter the number of people who will be using the facility</div>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
                    <div>
                        <label asp-for="StartTime" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                            <i class="fas fa-hourglass-start mr-1"></i> Start Time
                        </label>
                        <input asp-for="StartTime" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" type="time" id="startTime" />
                        <span asp-validation-for="StartTime" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    <div>
                        <label asp-for="EndTime" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                            <i class="fas fa-hourglass-end mr-1"></i> End Time
                        </label>
                        <input asp-for="EndTime" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" type="time" id="endTime" />
                        <span asp-validation-for="EndTime" class="text-red-500 text-sm mt-1"></span>
                    </div>
                </div>

                <div>
                    <label asp-for="Purpose" class="block text-sm font-bold text-gray-700 mb-1 flex items-center">
                        <i class="fas fa-clipboard mr-1"></i> Purpose of Reservation
                    </label>
                    <textarea asp-for="Purpose" rows="3" placeholder="Describe the purpose of your reservation..." class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"></textarea>
                    <span asp-validation-for="Purpose" class="text-red-500 text-sm mt-1"></span>
                    <div class="text-xs text-gray-500 mt-1">Briefly describe the purpose of your reservation (optional)</div>
                </div>

                <div class="rounded-lg shadow-sm mb-4 border border-green-400">
                    <div class="bg-green-500 text-white px-6 py-3 rounded-t-lg">
                        <h5 class="mb-0 text-lg font-semibold flex items-center"><i class="fas fa-money-bill mr-2"></i>Cost Summary</h5>
                    </div>
                    <div class="px-6 py-4 bg-white rounded-b-lg">
                        <div class="flex justify-between mb-2">
                            <div>Hourly Rate:</div>
                            <div id="hourlyRateDisplay" class="font-medium">@string.Format("{0:C}", Model.HourlyRate)</div>
                        </div>
                        <div class="flex justify-between mb-2">
                            <div>Duration:</div>
                            <div id="durationDisplay" class="font-medium">0 hours</div>
                        </div>
                        <hr class="my-2" />
                        <div class="flex justify-between font-bold text-lg">
                            <div>Total Cost:</div>
                            <div id="totalCostDisplay" class="text-green-600">@string.Format("{0:C}", 0)</div>
                        </div>
                    </div>
                </div>

                <div id="availabilityAlert" class="hidden my-3"></div>

                <div class="flex justify-between mt-8">
                    <a asp-action="Index" class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-md shadow-sm transition duration-200">
                        <i class="fas fa-arrow-left mr-2"></i> Back to List
                    </a>
                    <button type="submit" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md shadow-sm transition duration-200" id="submitButton">
                        <i class="fas fa-calendar-check mr-2"></i> Create Reservation
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function () {
            // Initial setup
            updateFacilityInfo();
            calculateTotal();
            
            // Update when facility changes
            $('#facilitySelect').change(function() {
                updateFacilityInfo();
                checkAvailability();
                calculateTotal();
            });
            
            // Update when date, start time or end time change
            $('#reservationDate, #startTime, #endTime').change(function() {
                checkAvailability();
                calculateTotal();
            });
            
            function updateFacilityInfo() {
                const selectedOption = $('#facilitySelect option:selected');
                const openingTime = selectedOption.data('opening');
                const closingTime = selectedOption.data('closing');
                const facilityName = selectedOption.text().split(' (')[0];
                
                $('#facilityHours').html(`<i class="fas fa-info-circle me-2"></i> <strong>${facilityName}</strong> is available between <strong>${openingTime}</strong> and <strong>${closingTime}</strong>`);
                
                const hourlyRate = selectedOption.data('hourly-rate');
                $('#hourlyRateDisplay').text(`$${hourlyRate.toFixed(2)}`);
                
                // Set default times if not already set
                if (!$('#startTime').val()) {
                    $('#startTime').val(openingTime);
                }
                
                // Set end time one hour after start time if not already set
                if (!$('#endTime').val()) {
                    const startParts = openingTime.split(':');
                    let endHour = parseInt(startParts[0]) + 1;
                    if (endHour > 23) endHour = 23;
                    const endTime = `${endHour.toString().padStart(2, '0')}:${startParts[1]}`;
                    $('#endTime').val(endTime);
                }
            }
            
            function parseTime(timeStr) {
                if (!timeStr) return null;
                const [hours, minutes] = timeStr.split(':').map(Number);
                return hours * 60 + minutes;
            }
            
            function calculateTotal() {
                const selectedOption = $('#facilitySelect option:selected');
                const hourlyRate = selectedOption.data('hourly-rate');
                
                const startTimeStr = $('#startTime').val();
                const endTimeStr = $('#endTime').val();
                
                if (!startTimeStr || !endTimeStr) {
                    $('#durationDisplay').text('0 hours');
                    $('#totalCostDisplay').text('$0.00');
                    return;
                }
                
                const startMinutes = parseTime(startTimeStr);
                const endMinutes = parseTime(endTimeStr);
                
                if (endMinutes <= startMinutes) {
                    $('#durationDisplay').text('Invalid time range');
                    $('#totalCostDisplay').text('$0.00');
                    return;
                }
                
                const durationMinutes = endMinutes - startMinutes;
                const durationHours = durationMinutes / 60;
                const totalCost = hourlyRate * durationHours;
                
                $('#durationDisplay').text(`${durationHours.toFixed(1)} hours`);
                $('#totalCostDisplay').text(`$${totalCost.toFixed(2)}`);
            }
            
            function checkAvailability() {
                const facilityId = $('#facilitySelect').val();
                const date = $('#reservationDate').val();
                const startTime = $('#startTime').val();
                const endTime = $('#endTime').val();
                
                if (!facilityId || !date || !startTime || !endTime) {
                    return;
                }
                
                $.ajax({
                    url: `/Reservations/CheckAvailability`,
                    type: 'GET',
                    data: {
                        facilityId: facilityId,
                        date: date,
                        startTime: startTime,
                        endTime: endTime
                    },
                    success: function(result) {
                        const alert = $('#availabilityAlert');
                        alert.removeClass('hidden');
                        
                        if (result.available) {
                            alert.addClass('bg-green-100 border border-green-400 text-green-700');
                            alert.html(`<i class="fas fa-check-circle"></i> ${result.message}`);
                            $('#submitButton').prop('disabled', false);
                        } else {
                            alert.addClass('bg-red-100 border border-red-400 text-red-700');
                            alert.html(`<i class="fas fa-exclamation-circle"></i> ${result.message}`);
                            $('#submitButton').prop('disabled', true);
                        }
                    },
                    error: function() {
                        const alert = $('#availabilityAlert');
                        alert.removeClass('hidden');
                        alert.addClass('bg-red-100 border border-red-400 text-red-700');
                        alert.html('<i class="fas fa-exclamation-circle"></i> An error occurred while checking availability.');
                    }
                });
            }
            
            // Initial availability check
            if ($('#facilitySelect').val()) {
                checkAvailability();
            }
        });
    </script>
} 