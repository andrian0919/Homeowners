@model List<HomeownersSubdivision.Models.ForumCategory>

@{
    ViewData["Title"] = "Manage Forum Categories";
}

<style>
    .main-heading {
        display: flex;
        align-items: center;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        background: linear-gradient(to right, #1a1a2e, #3366FF);
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .main-heading i {
        font-size: 1.75rem;
        margin-right: 0.75rem;
        color: #6889F7;
    }
    .luxury-page-container {
        position: relative;
        z-index: 1;
    }
</style>

@await Html.PartialAsync("_LuxuryBackground")


<div class="container mx-auto px-4 py-8 luxury-page-container">
    <div class="main-heading mb-4">
        <i class="bi bi-list-ul"></i> Manage Forum Categories
    </div>
    <p class="text-gray-200 mb-6">Create, edit, and organize forum categories</p>
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
        <div class="mb-4 md:mb-0"></div>
        <div class="flex flex-wrap gap-2">
            <a href="@Url.Action("CreateCategory", "Forum")" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-sm transition duration-200">
                <i class="bi bi-plus-circle mr-2"></i> New Category
            </a>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Display Order</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Topics</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var category in Model.OrderBy(c => c.DisplayOrder))
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <a href="@Url.Action("Category", "Forum", new { id = category.Id })" class="text-indigo-600 hover:text-indigo-900 font-medium">
                                        @category.Name
                                    </a>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-sm text-gray-900 truncate max-w-xs">@category.Description</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @category.DisplayOrder
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (category.IsActive)
                                    {
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                            Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                            Inactive
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @(category.Topics?.Count ?? 0)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @category.CreatedAt.ToString("MMM dd, yyyy")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex justify-end space-x-2">
                                        <a href="@Url.Action("EditCategory", "Forum", new { id = category.Id })" class="text-indigo-600 hover:text-indigo-900">
                                            Edit
                                        </a>
                                        <form method="post" action="@Url.Action("DeleteCategory", "Forum", new { id = category.Id })" onsubmit="return confirm('Are you sure you want to delete this category? This will delete all topics and posts within it.');" class="inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="text-red-600 hover:text-red-900">
                                                Delete
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="bg-white rounded-lg shadow-sm p-8 text-center">
            <p class="text-gray-500">No categories have been created yet.</p>
            <a href="@Url.Action("CreateCategory", "Forum")" class="btn-luxury hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                Create First Category
            </a>
        </div>
    }
</div>

<!-- Alert for messages -->
@if (TempData.ContainsKey("SuccessMessage") || TempData.ContainsKey("ErrorMessage"))
{
    <div id="notification" class="fixed bottom-4 right-4 px-4 py-3 rounded-lg shadow-lg @(TempData.ContainsKey("SuccessMessage") ? "bg-green-50 text-green-800 border border-green-200" : "bg-red-50 text-red-800 border border-red-200")">
        <div class="flex items-center">
            @if (TempData.ContainsKey("SuccessMessage"))
            {
                <svg class="h-5 w-5 text-green-400 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                <span>@TempData["SuccessMessage"]</span>
            }
            else
            {
                <svg class="h-5 w-5 text-red-400 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
                <span>@TempData["ErrorMessage"]</span>
            }
        </div>
    </div>

    <script>
        setTimeout(function () {
            var notification = document.getElementById('notification');
            if (notification) {
                notification.style.opacity = '0';
                notification.style.transition = 'opacity 1s';
                setTimeout(function () {
                    notification.style.display = 'none';
                }, 1000);
            }
        }, 5000);
    </script>
} 
