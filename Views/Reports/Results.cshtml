@model Dictionary<string, object>

@{
    ViewData["Title"] = ViewBag.ReportName ?? "Report Results";
    var reportName = ViewBag.ReportName ?? "Report Results";
    var startDate = Model.ContainsKey("StartDate") ? Model["StartDate"] : null;
    var endDate = Model.ContainsKey("EndDate") ? Model["EndDate"] : null;
    var dateRange = (startDate != null && endDate != null) ? $"Period: {startDate:yyyy-MM-dd} to {endDate:yyyy-MM-dd}" : "";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-3xl font-bold">@reportName</h1>
            @if (startDate != null && endDate != null)
            {
                <p class="text-gray-600">@dateRange</p>
            }
        </div>
        <div class="flex space-x-2">
            <a href="@Url.Action("Index")" class="btn-outline-dark">
                <i class="bi bi-arrow-left mr-1"></i> Back to Reports
            </a>
            <button onclick="window.print()" class="btn-outline-primary print:hidden">
                <i class="bi bi-printer mr-1"></i> Print Report
            </button>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-50 border-l-4 border-green-400 p-4 mb-6 print:hidden">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="bi bi-check-circle text-green-400"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-green-700">@TempData["SuccessMessage"]</p>
                </div>
            </div>
        </div>
    }

    @if (TempData["WarningMessage"] != null)
    {
        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6 print:hidden">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="bi bi-exclamation-triangle text-yellow-400"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-yellow-700">@TempData["WarningMessage"]</p>
                </div>
            </div>
        </div>
    }

    <div class="bg-white rounded-lg shadow-sm overflow-hidden print:shadow-none">
        @if (Model.ContainsKey("ReportTitle"))
        {
            <div class="p-4 bg-blue-50 border-b border-blue-100 print:bg-white print:border-gray-300">
                <h2 class="text-lg font-semibold text-blue-700 print:text-black">@Model["ReportTitle"]</h2>
            </div>
        }
        
        <div class="p-6">
                    @if (Model.ContainsKey("TotalBillsIssued") && Model.ContainsKey("TotalBillsAmount"))
                    {
                <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4">Bills Summary</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                        <div class="bg-blue-50 rounded-lg p-4 border border-blue-100">
                            <div class="text-sm text-blue-600 mb-1">Total Bills Issued</div>
                            <div class="text-2xl font-bold">@Model["TotalBillsIssued"]</div>
                        </div>
                        <div class="bg-green-50 rounded-lg p-4 border border-green-100">
                            <div class="text-sm text-green-600 mb-1">Total Bills Amount</div>
                            <div class="text-2xl font-bold">₱@String.Format("{0:N2}", Model["TotalBillsAmount"])</div>
                        </div>
                        @if (Model.ContainsKey("TotalOverdueBills"))
                        {
                            <div class="bg-red-50 rounded-lg p-4 border border-red-100">
                                <div class="text-sm text-red-600 mb-1">Overdue Bills</div>
                                <div class="text-2xl font-bold">@Model["TotalOverdueBills"] (₱@String.Format("{0:N2}", Model["TotalOverdueAmount"]))</div>
                        </div>
                    }
                </div>

                @if (Model.ContainsKey("BillsByType"))
                {
                        <h4 class="text-lg font-medium mb-2">Bills by Type</h4>
                        <div class="overflow-x-auto mb-6">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @{
                                        try
                                        {
                                            if (Model["BillsByType"] is System.Text.Json.JsonElement jsonElement)
                                            {
                                                foreach (var item in jsonElement.EnumerateArray())
                                                {
                                                    <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Type").GetString()</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Count").GetInt32()</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₱@String.Format("{0:N2}", item.GetProperty("Amount").GetDecimal())</td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model["BillsByType"] is System.Collections.IEnumerable list)
                                            {
                                                foreach (dynamic item in list)
                                            {
                                                <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Type</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Count</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₱@String.Format("{0:N2}", item.Amount)</td>
                                                </tr>
                                                }
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            <tr>
                                                <td colspan="3" class="px-6 py-4 text-sm text-red-500">Error displaying data: @ex.Message</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                    </div>
                }
            </div>
        }
            
            @if (Model.ContainsKey("TotalPaymentsReceived") && Model.ContainsKey("TotalPaymentsAmount"))
        {
            <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4">Payments Summary</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                        <div class="bg-indigo-50 rounded-lg p-4 border border-indigo-100">
                            <div class="text-sm text-indigo-600 mb-1">Total Payments Received</div>
                            <div class="text-2xl font-bold">@Model["TotalPaymentsReceived"]</div>
                                    </div>
                        <div class="bg-purple-50 rounded-lg p-4 border border-purple-100">
                            <div class="text-sm text-purple-600 mb-1">Total Payments Amount</div>
                            <div class="text-2xl font-bold">₱@String.Format("{0:N2}", Model["TotalPaymentsAmount"])</div>
                        </div>
                    </div>
                    
                    @if (Model.ContainsKey("PaymentsByMethod"))
                    {
                        <h4 class="text-lg font-medium mb-2">Payments by Method</h4>
                        <div class="overflow-x-auto mb-6">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Method</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @{
                                        try
                                        {
                                            if (Model["PaymentsByMethod"] is System.Text.Json.JsonElement jsonElement)
                                            {
                                                foreach (var item in jsonElement.EnumerateArray())
                                                {
                                                    <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Method").GetString()</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Count").GetInt32()</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₱@String.Format("{0:N2}", item.GetProperty("Amount").GetDecimal())</td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model["PaymentsByMethod"] is System.Collections.IEnumerable list)
                                            {
                                                foreach (dynamic item in list)
                                                {
                                                    <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Method</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Count</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₱@String.Format("{0:N2}", item.Amount)</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            <tr>
                                                <td colspan="3" class="px-6 py-4 text-sm text-red-500">Error displaying data: @ex.Message</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                    </div>
                }
            </div>
        }
            
            @if (Model.ContainsKey("CountByStatus"))
        {
            <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4">Service Requests Summary</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-1 gap-4 mb-6">
                        <div class="bg-blue-50 rounded-lg p-4 border border-blue-100">
                            <div class="text-sm text-blue-600 mb-1">Total Requests</div>
                            <div class="text-2xl font-bold">@Model["TotalRequests"]</div>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        @if (Model.ContainsKey("CountByStatus"))
                        {
                            <div>
                                <h4 class="text-lg font-medium mb-2">Requests by Status</h4>
                                <div class="overflow-x-auto mb-6">
                                    <table class="min-w-full divide-y divide-gray-200">
                                        <thead class="bg-gray-50">
                                            <tr>
                                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                                            </tr>
                                        </thead>
                                        <tbody class="bg-white divide-y divide-gray-200">
                                            @{
                                                try
                                                {
                                                    if (Model["CountByStatus"] is System.Text.Json.JsonElement jsonElement)
                                                    {
                                                        foreach (var item in jsonElement.EnumerateArray())
                                                        {
                                                            string status = item.GetProperty("Status").GetString();
                                                            string badgeClass = status switch
                                                            {
                                                                "New" => "bg-blue-100 text-blue-800",
                                                                "InProgress" => "bg-yellow-100 text-yellow-800",
                                                                "Completed" => "bg-green-100 text-green-800",
                                                                "Cancelled" => "bg-red-100 text-red-800",
                                                                _ => "bg-gray-100 text-gray-800"
                                                            };
                                                            <tr>
                                                                <td class="px-6 py-4 whitespace-nowrap">
                                                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @badgeClass">
                                                                        @status
                                                                    </span>
                                                                </td>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Count").GetInt32()</td>
                                                            </tr>
                                                        }
                                                    }
                                                    else if (Model["CountByStatus"] is System.Collections.IEnumerable list)
                                                    {
                                                        foreach (dynamic item in list)
                                                        {
                                                            string status = item.Status.ToString();
                                                            string badgeClass = status switch
                                                            {
                                                                "New" => "bg-blue-100 text-blue-800",
                                                                "InProgress" => "bg-yellow-100 text-yellow-800",
                                                                "Completed" => "bg-green-100 text-green-800",
                                                                "Cancelled" => "bg-red-100 text-red-800",
                                                                _ => "bg-gray-100 text-gray-800"
                                                            };
                                                            <tr>
                                                                <td class="px-6 py-4 whitespace-nowrap">
                                                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @badgeClass">
                                                                        @status
                                                                    </span>
                                                                </td>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Count</td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                                catch (Exception ex)
                                                {
                                                    <tr>
                                                        <td colspan="2" class="px-6 py-4 text-sm text-red-500">Error displaying data: @ex.Message</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                        </div>
                    }
                    
                        @if (Model.ContainsKey("CountByType"))
                        {
                            <div>
                                <h4 class="text-lg font-medium mb-2">Requests by Type</h4>
                                <div class="overflow-x-auto mb-6">
                                    <table class="min-w-full divide-y divide-gray-200">
                                        <thead class="bg-gray-50">
                                            <tr>
                                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                                            </tr>
                                        </thead>
                                        <tbody class="bg-white divide-y divide-gray-200">
                                            @{
                                                try
                                                {
                                                    if (Model["CountByType"] is System.Text.Json.JsonElement jsonElement)
                                                    {
                                                        foreach (var item in jsonElement.EnumerateArray())
                                                        {
                                                            <tr>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Type").GetString()</td>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Count").GetInt32()</td>
                                                            </tr>
                                                        }
                                                    }
                                                    else if (Model["CountByType"] is System.Collections.IEnumerable list)
                                                    {
                                                        foreach (dynamic item in list)
                                                        {
                                                            <tr>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Type</td>
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Count</td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                                catch (Exception ex)
                                                {
                                                    <tr>
                                                        <td colspan="2" class="px-6 py-4 text-sm text-red-500">Error displaying data: @ex.Message</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                        </div>
                    }
                    </div>
                </div>
            }

            @* Community Engagement Report *@
            @if (Model.ContainsKey("TotalForumPosts") || Model.ContainsKey("TotalForumTopics"))
                {
                    <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4">Community Engagement Summary</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                        @if (Model.ContainsKey("TotalForumPosts"))
                        {
                            <div class="bg-indigo-50 rounded-lg p-4 border border-indigo-100">
                                <div class="text-sm text-indigo-600 mb-1">Total Forum Posts</div>
                                <div class="text-2xl font-bold">@Model["TotalForumPosts"]</div>
                            </div>
                        }
                        
                        @if (Model.ContainsKey("TotalForumTopics"))
                        {
                            <div class="bg-purple-50 rounded-lg p-4 border border-purple-100">
                                <div class="text-sm text-purple-600 mb-1">Total Topics</div>
                                <div class="text-2xl font-bold">@Model["TotalForumTopics"]</div>
                            </div>
                        }
                        
                        @if (Model.ContainsKey("TotalReactions"))
                        {
                            <div class="bg-pink-50 rounded-lg p-4 border border-pink-100">
                                <div class="text-sm text-pink-600 mb-1">Total Reactions</div>
                                <div class="text-2xl font-bold">@Model["TotalReactions"]</div>
                            </div>
                        }
                    </div>
                    
                    @if (Model.ContainsKey("ActiveCategories"))
                    {
                        <h4 class="text-lg font-medium mb-2">Most Active Categories</h4>
                        <div class="overflow-x-auto mb-6">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Posts</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @{
                                        try
                                        {
                                            if (Model["ActiveCategories"] is System.Text.Json.JsonElement jsonElement)
                                            {
                                                foreach (var item in jsonElement.EnumerateArray())
                                                {
                                                    <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Category").GetString()</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.GetProperty("Count").GetInt32()</td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model["ActiveCategories"] is System.Collections.IEnumerable list)
                                            {
                                                foreach (dynamic item in list)
                                            {
                                                <tr>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Category</td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Count</td>
                                                </tr>
                                                }
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            <tr>
                                                <td colspan="2" class="px-6 py-4 text-sm text-red-500">Error displaying data: @ex.Message</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            }
            
            @if (!Model.Any() || 
                (!Model.ContainsKey("TotalBillsIssued") && 
                !Model.ContainsKey("CountByStatus") && 
                !Model.ContainsKey("TotalForumPosts")))
            {
                <div class="text-center py-10">
                    <i class="bi bi-info-circle text-4xl text-gray-400 mb-3"></i>
                    <h3 class="text-xl font-semibold text-gray-700 mb-2">No Data Available</h3>
                    <p class="text-gray-600 mb-4">There is no data available for this report in the selected period.</p>
                    </div>
                }
            </div>
    </div>
</div>

@section Styles {
    <style>
        @@media print {
            body {
                padding: 0;
                margin: 0;
                background-color: white;
                -webkit-print-color-adjust: exact !important;
                color-adjust: exact !important;
                print-color-adjust: exact !important;
            }
            .container {
                max-width: none;
                padding: 0;
                margin: 0;
            }
            .print\:hidden {
                display: none !important;
            }
        }
    </style>
} 