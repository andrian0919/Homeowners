@model IEnumerable<HomeownersSubdivision.Models.Bill>
@using HomeownersSubdivision.Models
@{
    ViewData["Title"] = "My Bills";
}

<div class="container-fluid p-3">
    <!-- Error/Success Messages -->
    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        <div class="alert alert-danger mb-4">
            <div class="d-flex align-items-center">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                <div>@TempData["ErrorMessage"]</div>
            </div>
            <div class="mt-2 small">Try refreshing the page. If the problem persists, please contact support.</div>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="alert alert-success mb-4">
            <div class="d-flex align-items-center">
                <i class="bi bi-check-circle-fill me-2"></i>
                <div>@TempData["SuccessMessage"]</div>
            </div>
        </div>
    }

    <!-- Header with Title and Description -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-4">
        <div>
            <h1 class="h2 fw-bold mb-1">My Bills</h1>
            <p class="text-muted">View and manage your association payments</p>
        </div>
        <div class="d-flex gap-2 mt-3 mt-md-0">
            <a href="@Url.Action("PaymentHistory", "Payments")" class="btn btn-outline-primary">
                <i class="bi bi-clock-history me-1"></i> Payment History
            </a>
            <a href="@Url.Action("MakePayment", "Payments")" class="btn btn-primary">
                <i class="bi bi-credit-card me-1"></i> Make a Payment
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-4">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body p-3 p-md-4">
                    <h6 class="text-secondary mb-2">Total Outstanding</h6>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-cash-coin text-danger me-2 fs-4"></i>
                        <div class="fs-3 fw-bold text-danger">
                            @{
                                var totalDue = ViewBag.TotalDue;
                                if (totalDue != null)
                                {
                                    @:$@(((decimal)totalDue).ToString("N2"))
                                }
                                else
                                {
                                    @:$0.00
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body p-3 p-md-4">
                    <h6 class="text-secondary mb-2">Total Bills</h6>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-file-earmark-text text-primary me-2 fs-4"></i>
                        <div class="fs-3 fw-bold">@(ViewBag.TotalBills ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body p-3 p-md-4">
                    <h6 class="text-secondary mb-2">Overdue Bills</h6>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-exclamation-circle @((ViewBag.OverdueBills != null && (int)ViewBag.OverdueBills > 0 ? "text-danger" : "text-muted")) me-2 fs-4"></i>
                        <div class="fs-3 fw-bold @((ViewBag.OverdueBills != null && (int)ViewBag.OverdueBills > 0 ? "text-danger" : ""))">
                            @(ViewBag.OverdueBills ?? 0)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter and Quick Pay Sections -->
    <div class="row g-3 mb-4">
        <!-- Filter Section -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="card-title mb-0 d-flex align-items-center">
                        <i class="bi bi-funnel me-2"></i> Filter Bills
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get" id="filterForm">
                        <div class="mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select name="status" id="status" class="form-select">
                                <option value="">All Statuses</option>
                                @foreach (var status in ViewBag.StatusOptions ?? new List<string>())
                                {
                                    <option value="@status" selected="@(ViewBag.CurrentStatus == status)">@status</option>
                                }
                            </select>
                        </div>
                        <div class="d-flex gap-2">
                            <button id="btnFilter" type="button" class="btn btn-primary px-4">
                                <i class="bi bi-filter me-1"></i> Filter
                            </button>
                            <a href="@Url.Action("MyBills")" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-1"></i> Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Quick Pay Section -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="card-title mb-0 d-flex align-items-center">
                        <i class="bi bi-lightning-charge-fill text-warning me-2"></i> Quick Pay
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.PaymentMethods != null && ViewBag.PaymentMethods.Count > 0)
                    {
                        <div class="row g-2">
                            @{
                                // Safe approach to handle different collection types
                                var displayMethods = ViewBag.PaymentMethods as IEnumerable<PaymentMethod>;
                                var methodsToShow = displayMethods?.Count() > 2 
                                    ? displayMethods.Take(2).ToList() 
                                    : displayMethods?.ToList() ?? new List<PaymentMethod>();
                            }
                            
                            @foreach (var method in methodsToShow)
                            {
                                <div class="col-md-6">
                                    <div class="card @(method.IsDefault ? "border-primary" : "border-light") shadow-sm h-100">
                                        <div class="card-body p-3">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <h6 class="card-title text-truncate mb-0">@method.Name</h6>
                                                @if (method.IsDefault)
                                                {
                                                    <span class="badge bg-primary text-white">Default</span>
                                                }
                                            </div>
                                            <a href="@Url.Action("MakePayment", "Payments", new { paymentMethodId = method.Id })" 
                                               class="btn btn-sm btn-primary w-100 mt-2">
                                                <i class="bi bi-cash-coin me-1"></i> Pay with this
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="text-center mt-3">
                            <a href="@Url.Action("PaymentMethods", "Payments")" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-gear me-1"></i> Manage Payment Methods
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-credit-card text-muted" style="font-size: 2.5rem;"></i>
                            <p class="mt-3 mb-3">No payment methods set up yet</p>
                            <a href="@Url.Action("AddPaymentMethod", "Payments")" class="btn btn-primary">
                                <i class="bi bi-plus-circle me-2"></i> Add Payment Method
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Bills List -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-white py-3 border-bottom">
            <h5 class="card-title mb-0 d-flex align-items-center">
                <i class="bi bi-file-earmark-text me-2"></i> My Bills
            </h5>
        </div>
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Description</th>
                                <th>Issue Date</th>
                                <th>Due Date</th>
                                <th>Amount</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var bill in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="fw-semibold">@bill.Description</div>
                                        <span class="badge bg-light text-dark border">@bill.Type</span>
                                    </td>
                                    <td>@bill.IssueDate.ToString("MM/dd/yyyy")</td>
                                    <td>
                                        <div class="@(bill.IsOverdue ? "text-danger fw-bold" : "")">
                                            @bill.DueDate.ToString("MM/dd/yyyy")
                                        </div>
                                        @if (bill.IsOverdue)
                                        {
                                            <span class="badge bg-danger">Overdue</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="fw-bold">$@bill.Amount.ToString("N2")</div>
                                        @if (bill.PaidAmount > 0 && bill.PaidAmount < bill.Amount)
                                        {
                                            <div class="small text-success">
                                                Paid: $@bill.PaidAmount.ToString("N2")
                                            </div>
                                            <div class="small text-danger">
                                                Due: $@bill.RemainingAmount.ToString("N2")
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            string badgeClass = "bg-secondary";
                                            string badgeIcon = "";
                                            
                                            switch (bill.Status)
                                            {
                                                case "Unpaid":
                                                    badgeClass = "bg-warning text-dark";
                                                    badgeIcon = "bi-exclamation-circle me-1";
                                                    break;
                                                case "Paid":
                                                    badgeClass = "bg-success";
                                                    badgeIcon = "bi-check-circle me-1";
                                                    break;
                                                case "Overdue":
                                                    badgeClass = "bg-danger";
                                                    badgeIcon = "bi-exclamation-triangle me-1";
                                                    break;
                                                case "Cancelled":
                                                    badgeClass = "bg-secondary";
                                                    badgeIcon = "bi-x-circle me-1";
                                                    break;
                                            }
                                        }
                                        <span class="badge @badgeClass">
                                            <i class="@badgeIcon"></i>@bill.Status
                                        </span>
                                    </td>
                                    <td>
                                        <div class="d-flex gap-1">
                                            <a href="@Url.Action("Details", new { id = bill.Id })" 
                                               class="btn btn-sm btn-outline-primary" 
                                               data-bs-toggle="tooltip" 
                                               title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            @if (bill.Status != "Paid")
                                            {
                                                <a href="@Url.Action("MakePayment", "Payments", new { billId = bill.Id })" 
                                                   class="btn btn-sm btn-outline-success" 
                                                   data-bs-toggle="tooltip" 
                                                   title="Pay Now">
                                                    <i class="bi bi-credit-card"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="p-3 rounded-circle bg-light d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px;">
                        <i class="bi bi-receipt-cutoff text-muted" style="font-size: 2.5rem;"></i>
                    </div>
                    <h5 class="mb-2">No Bills Found</h5>
                    <p class="text-muted mb-0 col-md-6 mx-auto">
                        You don't have any bills that match your current filter. Try clearing filters or check back later.
                    </p>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div class="text-muted small">
                Showing page @ViewBag.CurrentPage of @ViewBag.TotalPages
            </div>
            <div class="d-flex gap-2">
                @if (ViewBag.CurrentPage > 1)
                {
                    <a href="@Url.Action("MyBills", new { page = ViewBag.CurrentPage - 1, status = ViewBag.CurrentStatus })" 
                       class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-chevron-left me-1"></i> Previous
                    </a>
                }
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a href="@Url.Action("MyBills", new { page = ViewBag.CurrentPage + 1, status = ViewBag.CurrentStatus })" 
                       class="btn btn-sm btn-outline-secondary">
                        Next <i class="bi bi-chevron-right ms-1"></i>
                    </a>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(function() {
            // Enable tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
            
            // Handle filter button click
            $("#btnFilter").click(function() {
                var status = $("#status").val();
                window.location.href = '@Url.Action("MyBills")' + '?status=' + status;
            });
            
            // Allow enter key to trigger filter
            $("#status").keypress(function(e) {
                if (e.which == 13) {
                    $("#btnFilter").click();
                    return false;
                }
            });
        });
    </script>
} 