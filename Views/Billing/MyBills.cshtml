@model IEnumerable<HomeownersSubdivision.Models.Bill>
@using HomeownersSubdivision.Models
@{
    ViewData["Title"] = "My Bills";
}

<div class="container mx-auto px-4 py-8">
    <!-- Error/Success Messages -->
    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-lg shadow-sm" role="alert">
            <div class="flex items-center">
                <i class="bi bi-exclamation-triangle-fill mr-2"></i>
                <div>@TempData["ErrorMessage"]</div>
            </div>
            <div class="mt-2 text-sm">Try refreshing the page. If the problem persists, please contact support.</div>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded-lg shadow-sm" role="alert">
            <div class="flex items-center">
                <i class="bi bi-check-circle-fill mr-2"></i>
                <div>@TempData["SuccessMessage"]</div>
            </div>
        </div>
    }

    <!-- Header with Title and Description -->
    <div class="flex flex-col md:flex-row justify-between md:items-center mb-6">
        <div>
            <h1 class="text-3xl font-bold text-gray-800 mb-1">My Bills</h1>
            <p class="text-gray-600">View and manage your association payments</p>
        </div>
        <div class="flex gap-3 mt-4 md:mt-0">
            <a href="@Url.Action("PaymentHistory", "Payments")" class="inline-flex items-center px-4 py-2 border border-blue-600 text-blue-600 bg-white rounded-lg shadow-sm hover:bg-blue-50 transition duration-200">
                <i class="bi bi-clock-history mr-2"></i> Payment History
            </a>
            <a href="@Url.Action("MakePayment", "Payments")" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-sm transition duration-200">
                <i class="bi bi-credit-card mr-2"></i> Make a Payment
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
            <div class="p-5">
                <h6 class="text-gray-500 text-sm font-medium mb-2">Total Outstanding</h6>
                <div class="flex items-center">
                    <i class="bi bi-cash-coin text-red-500 mr-2 text-xl"></i>
                    <div class="text-2xl font-bold text-red-500">
                        @{
                            var totalDue = ViewBag.TotalDue;
                            if (totalDue != null)
                            {
                                @:$@(((decimal)totalDue).ToString("N2"))
                            }
                            else
                            {
                                @:$0.00
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
            <div class="p-5">
                <h6 class="text-gray-500 text-sm font-medium mb-2">Total Bills</h6>
                <div class="flex items-center">
                    <i class="bi bi-file-earmark-text text-blue-500 mr-2 text-xl"></i>
                    <div class="text-2xl font-bold text-gray-800">@(ViewBag.TotalBills ?? 0)</div>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
            <div class="p-5">
                <h6 class="text-gray-500 text-sm font-medium mb-2">Overdue Bills</h6>
                <div class="flex items-center">
                    <i class="bi bi-exclamation-circle @((ViewBag.OverdueBills != null && (int)ViewBag.OverdueBills > 0 ? "text-red-500" : "text-gray-400")) mr-2 text-xl"></i>
                    <div class="text-2xl font-bold @((ViewBag.OverdueBills != null && (int)ViewBag.OverdueBills > 0 ? "text-red-500" : "text-gray-800"))">
                        @(ViewBag.OverdueBills ?? 0)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter and Quick Pay Sections -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <!-- Filter Section -->
        <div>
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 h-full">
                <div class="bg-gray-50 px-6 py-4 border-b border-gray-200">
                    <h5 class="font-semibold text-gray-800 flex items-center">
                        <i class="bi bi-funnel mr-2"></i> Filter Bills
                    </h5>
                </div>
                <div class="p-6">
                    <form method="get" id="filterForm">
                        <div class="mb-4">
                            <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                            <select name="status" id="status" class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                <option value="">All Statuses</option>
                                @foreach (var status in ViewBag.StatusOptions ?? new List<string>())
                                {
                                    <option value="@status" selected="@(ViewBag.CurrentStatus == status)">@status</option>
                                }
                            </select>
                        </div>
                        <div class="flex gap-3">
                            <button id="btnFilter" type="button" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-sm transition duration-200">
                                <i class="bi bi-filter mr-2"></i> Filter
                            </button>
                            <a href="@Url.Action("MyBills")" class="inline-flex items-center px-4 py-2 border border-gray-300 text-gray-700 bg-white rounded-lg shadow-sm hover:bg-gray-50 transition duration-200">
                                <i class="bi bi-x-circle mr-2"></i> Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Quick Pay Section -->
        <div>
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 h-full">
                <div class="bg-gray-50 px-6 py-4 border-b border-gray-200">
                    <h5 class="font-semibold text-gray-800 flex items-center">
                        <i class="bi bi-lightning-charge-fill text-yellow-500 mr-2"></i> Quick Pay
                    </h5>
                </div>
                <div class="p-6">
                    @if (ViewBag.PaymentMethods != null && ViewBag.PaymentMethods.Count > 0)
                    {
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            @{
                                // Safe approach to handle different collection types
                                var displayMethods = ViewBag.PaymentMethods as IEnumerable<PaymentMethod>;
                                var methodsToShow = displayMethods?.Count() > 2 
                                    ? displayMethods.Take(2).ToList() 
                                    : displayMethods?.ToList() ?? new List<PaymentMethod>();
                            }
                            
                            @foreach (var method in methodsToShow)
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden border @(method.IsDefault ? "border-blue-400" : "border-gray-200") h-full">
                                    <div class="p-4">
                                        <div class="flex justify-between items-start mb-3">
                                            <h6 class="font-medium text-gray-800 truncate">@method.Name</h6>
                                            @if (method.IsDefault)
                                            {
                                                <span class="px-2 py-1 inline-flex text-xs leading-4 font-semibold rounded-full bg-blue-100 text-blue-800">Default</span>
                                            }
                                        </div>
                                        <a href="@Url.Action("MakePayment", "Payments", new { paymentMethodId = method.Id })" 
                                           class="w-full inline-flex justify-center items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-md shadow-sm transition duration-200">
                                            <i class="bi bi-cash-coin mr-2"></i> Pay with this
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="text-center mt-4">
                            <a href="@Url.Action("PaymentMethods", "Payments")" class="inline-flex items-center px-4 py-2 border border-blue-300 text-blue-600 bg-white rounded-md text-sm font-medium hover:bg-blue-50 transition duration-200">
                                <i class="bi bi-gear mr-2"></i> Manage Payment Methods
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-8">
                            <i class="bi bi-credit-card text-gray-400 text-5xl"></i>
                            <p class="mt-3 mb-4 text-gray-600">No payment methods set up yet</p>
                            <a href="@Url.Action("AddPaymentMethod", "Payments")" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-sm transition duration-200">
                                <i class="bi bi-plus-circle mr-2"></i> Add Payment Method
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Bills List -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 mb-6">
        <div class="bg-gray-50 px-6 py-4 border-b border-gray-200">
            <h5 class="font-semibold text-gray-800 flex items-center">
                <i class="bi bi-file-earmark-text mr-2"></i> My Bills
            </h5>
        </div>
        <div>
            @if (Model != null && Model.Any())
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Issue Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Due Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var bill in Model)
                            {
                                <tr class="hover:bg-gray-50 transition">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="font-medium text-gray-900">@bill.Description</div>
                                        <span class="px-2 py-1 inline-flex text-xs leading-4 font-semibold rounded-full bg-gray-100 text-gray-800">@bill.Type</span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @bill.IssueDate.ToString("MM/dd/yyyy")
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm @(bill.IsOverdue ? "text-red-600 font-bold" : "text-gray-500")">
                                            @bill.DueDate.ToString("MM/dd/yyyy")
                                        </div>
                                        @if (bill.IsOverdue)
                                        {
                                            <span class="px-2 py-1 inline-flex text-xs leading-4 font-semibold rounded-full bg-red-100 text-red-800">Overdue</span>
                                        }
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-bold text-gray-900">$@bill.Amount.ToString("N2")</div>
                                        @if (bill.PaidAmount > 0 && bill.PaidAmount < bill.Amount)
                                        {
                                            <div class="text-xs text-green-600">
                                                Paid: $@bill.PaidAmount.ToString("N2")
                                            </div>
                                            <div class="text-xs text-red-600">
                                                Due: $@bill.RemainingAmount.ToString("N2")
                                            </div>
                                        }
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        @{
                                            string badgeClass = "";
                                            string textClass = "";
                                            string badgeIcon = "";
                                            
                                            switch (bill.Status)
                                            {
                                                case "Paid":
                                                    badgeClass = "bg-green-100 text-green-800";
                                                    badgeIcon = "bi-check-circle-fill";
                                                    break;
                                                case "Partial":
                                                    badgeClass = "bg-blue-100 text-blue-800";
                                                    badgeIcon = "bi-circle-half";
                                                    break;
                                                case "Overdue":
                                                    badgeClass = "bg-red-100 text-red-800";
                                                    badgeIcon = "bi-exclamation-circle-fill";
                                                    break;
                                                case "Unpaid":
                                                case "Pending":
                                                    badgeClass = "bg-yellow-100 text-yellow-800";
                                                    badgeIcon = "bi-hourglass-split";
                                                    break;
                                                case "Cancelled":
                                                    badgeClass = "bg-gray-100 text-gray-800";
                                                    badgeIcon = "bi-x-circle-fill";
                                                    break;
                                                default:
                                                    badgeClass = "bg-gray-100 text-gray-800";
                                                    badgeIcon = "bi-question-circle-fill";
                                                    break;
                                            }
                                        }
                                        <span class="px-2 py-1 inline-flex text-xs leading-4 font-semibold rounded-full @badgeClass">
                                            <i class="bi @badgeIcon mr-1"></i> @bill.Status
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <a href="@Url.Action("Details", "Billing", new { id = bill.Id })" 
                                               class="text-white bg-blue-500 hover:bg-blue-600 rounded-md px-2.5 py-1.5 transition duration-200"
                                               title="View Details">
                                                <i class="bi bi-info-circle"></i>
                                            </a>
                                            @if (bill.Status != "Paid" && bill.Status != "Cancelled")
                                            {
                                                <a href="@Url.Action("MakePayment", "Payments", new { billId = bill.Id })" 
                                                   class="text-white bg-green-500 hover:bg-green-600 rounded-md px-2.5 py-1.5 transition duration-200"
                                                   title="Pay Bill">
                                                    <i class="bi bi-credit-card"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-16">
                    <i class="bi bi-file-earmark-text text-gray-400 text-5xl mb-3"></i>
                    <h3 class="text-lg font-medium text-gray-800 mb-1">No Bills Found</h3>
                    <p class="text-gray-600 mb-6">
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentStatus))
                        {
                            <span>No bills match your filter criteria. Try different filters or clear them to see all bills.</span>
                        }
                        else
                        {
                            <span>You don't have any bills at this time.</span>
                        }
                    </p>
                </div>
            }
        </div>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
        <div class="flex justify-between items-center">
            <div class="text-sm text-gray-500">
                Showing page @ViewBag.CurrentPage of @ViewBag.TotalPages
            </div>
            <div class="flex gap-2">
                @if (ViewBag.CurrentPage > 1)
                {
                    <a href="@Url.Action("MyBills", "Billing", new { page = ViewBag.CurrentPage - 1, status = ViewBag.CurrentStatus })"
                       class="px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                        Previous
                    </a>
                }
                else
                {
                    <button disabled class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm font-medium text-gray-400 cursor-not-allowed">
                        Previous
                    </button>
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a href="@Url.Action("MyBills", "Billing", new { page = ViewBag.CurrentPage + 1, status = ViewBag.CurrentStatus })"
                       class="px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                        Next
                    </a>
                }
                else
                {
                    <button disabled class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm font-medium text-gray-400 cursor-not-allowed">
                        Next
                    </button>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#btnFilter').click(function() {
                $('#filterForm').submit();
            });
        });
    </script>
} 