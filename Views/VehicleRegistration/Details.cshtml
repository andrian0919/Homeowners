@model HomeownersSubdivision.Models.VehicleRegistration

@{
    ViewData["Title"] = "Vehicle Registration Details";
}

@await Html.PartialAsync("_LuxuryBackground")

<style>
    .main-heading {
        display: flex;
        align-items: center;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        background: linear-gradient(to right, #1a1a2e, #3366FF);
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .main-heading i {
        font-size: 1.75rem;
        margin-right: 0.75rem;
        color: #6889F7;
    }
    
    .admin-card {
        background-color: white;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .admin-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    .admin-button-primary {
        background: linear-gradient(to right, #3366FF, #4D76E1);
        color: white;
    }
    
    .admin-button-primary:hover {
        background: linear-gradient(to right, #4D76E1, #6889F7);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .admin-button-secondary {
        background: linear-gradient(to right, #4B5563, #6B7280);
        color: white;
    }
    
    .admin-button-secondary:hover {
        background: linear-gradient(to right, #6B7280, #9CA3AF);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .admin-button-danger {
        background: linear-gradient(to right, #E53E3E, #F56565);
        color: white;
    }
    
    .admin-button-danger:hover {
        background: linear-gradient(to right, #F56565, #FC8181);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .details-row {
        padding: 0.75rem 1rem;
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1rem;
        align-items: center;
    }
    
    .details-row:nth-child(odd) {
        background-color: #f9fafb;
    }
    
    .details-label {
        font-weight: 500;
        color: #6B7280;
        font-size: 0.875rem;
    }
    
    .details-value {
        color: #111827;
        font-size: 0.875rem;
    }
</style>

<div class="container mx-auto px-4 py-8 luxury-page-container">
    <div class="main-heading">
        <i class="fas fa-car"></i> Vehicle Registration Details
    </div>
    
    <div class="admin-card mb-6">
        <div class="p-4 flex justify-between items-center">
            <p class="text-gray-600">Detailed information about this registered vehicle.</p>
            @{
                var isExpired = Model.ExpiryDate.HasValue && Model.ExpiryDate.Value < DateTime.Now;
                string badgeColor = (Model.IsActive && !isExpired) 
                    ? "bg-green-100 text-green-800" 
                    : (isExpired ? "bg-red-100 text-red-800" : "bg-gray-100 text-gray-800");
                string statusText = (Model.IsActive && !isExpired) 
                    ? "Active" 
                    : (isExpired ? "Expired" : "Inactive");
            }
            <span class="px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full @badgeColor">
                @statusText
            </span>
        </div>
        
        <div class="border-t border-gray-200">
            <div class="details-row">
                <div class="details-label">Owner</div>
                <div class="details-value">@Model.Owner.FullName</div>
            </div>
            <div class="details-row">
                <div class="details-label">License Plate</div>
                <div class="details-value">@Model.LicensePlate</div>
            </div>
            <div class="details-row">
                <div class="details-label">Make</div>
                <div class="details-value">@Model.Make</div>
            </div>
            <div class="details-row">
                <div class="details-label">Model</div>
                <div class="details-value">@Model.Model</div>
            </div>
            <div class="details-row">
                <div class="details-label">Type</div>
                <div class="details-value">@Model.Type</div>
            </div>
            <div class="details-row">
                <div class="details-label">Color</div>
                <div class="details-value">
                    <div class="flex items-center">
                        <span class="h-4 w-4 rounded-full mr-2" style="background-color: @(string.IsNullOrEmpty(Model.Color) ? "#CCCCCC" : Model.Color)"></span>
                        @(string.IsNullOrEmpty(Model.Color) ? "Not specified" : Model.Color)
                    </div>
                </div>
            </div>
            <div class="details-row">
                <div class="details-label">Registration Date</div>
                <div class="details-value">@Model.RegistrationDate.ToString("MMMM dd, yyyy")</div>
            </div>
            <div class="details-row">
                <div class="details-label">Expiry Date</div>
                <div class="details-value">
                    @if (Model.ExpiryDate.HasValue)
                    {
                        var expiryClass = isExpired ? "text-red-600 font-semibold" : "";
                        <span class="@expiryClass">@Model.ExpiryDate.Value.ToString("MMMM dd, yyyy")</span>
                    }
                    else
                    {
                        <span>Not specified</span>
                    }
                </div>
            </div>
            <div class="details-row">
                <div class="details-label">Notes</div>
                <div class="details-value">@(string.IsNullOrEmpty(Model.Notes) ? "No notes" : Model.Notes)</div>
            </div>
            <div class="details-row">
                <div class="details-label">Created At</div>
                <div class="details-value">@Model.CreatedAt.ToString("MMMM dd, yyyy HH:mm")</div>
            </div>
            @if (Model.UpdatedAt.HasValue)
            {
                <div class="details-row">
                    <div class="details-label">Last Updated</div>
                    <div class="details-value">@Model.UpdatedAt.Value.ToString("MMMM dd, yyyy HH:mm")</div>
                </div>
            }
        </div>
    </div>

    <div class="flex justify-between">
        <a asp-action="AdminIndex" class="admin-button admin-button-secondary">
            <i class="fas fa-arrow-left mr-1"></i> Back to List
        </a>
        
        <div class="flex space-x-3">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="admin-button admin-button-primary">
                <i class="fas fa-edit mr-1"></i> Edit
            </a>
            
            <form asp-action="Delete" asp-route-id="@Model.Id" onsubmit="return confirm('Are you sure you want to delete this vehicle registration?');">
                <button type="submit" class="admin-button admin-button-danger">
                    <i class="fas fa-trash-alt mr-1"></i> Delete
                </button>
            </form>
        </div>
    </div>
</div> 