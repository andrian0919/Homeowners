@model IEnumerable<HomeownersSubdivision.Models.Announcement>

@{
    ViewData["Title"] = "Announcements";
    var isAdminOrStaff = Context.Session.GetString("UserRole") == "Administrator" || 
                          Context.Session.GetString("UserRole") == "Staff";
}

@await Html.PartialAsync("_LuxuryBackground")

<style>
    .main-heading {
        display: flex;
        align-items: center;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        background: linear-gradient(to right, #1a1a2e, #3366FF);
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .main-heading i {
        font-size: 1.75rem;
        margin-right: 0.75rem;
        color: #6889F7;
    }
    
    .admin-card {
        background-color: white;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .admin-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
    }
    
    .admin-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    .admin-button-primary {
        background: linear-gradient(to right, #3366FF, #4D76E1);
        color: white;
    }
    
    .admin-button-primary:hover {
        background: linear-gradient(to right, #4D76E1, #6889F7);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .add-announcement-button {
        background: linear-gradient(to right, #3366FF, #4D76E1);
        color: white;
        padding: 0.5rem 1.25rem;
        border-radius: 0.5rem;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .add-announcement-button:hover {
        background: linear-gradient(to right, #4D76E1, #6889F7);
        transform: translateY(-2px);
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
    }
    
    .announcement-card {
        background-color: white;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .announcement-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
    }
    
    .announcement-title {
        color: #1a1a2e;
        font-weight: 700;
        transition: all 0.2s ease;
    }
    
    .announcement-title:hover {
        color: #3366FF;
    }
    
    .action-link {
        color: #3366FF;
        transition: all 0.2s ease;
    }
    
    .action-link:hover {
        color: #4D76E1;
        text-decoration: underline;
    }
    
    .delete-link {
        color: #e53e3e;
        transition: all 0.2s ease;
    }
    
    .delete-link:hover {
        color: #c53030;
    }
</style>

<div class="container mx-auto px-4 py-8 luxury-page-container announcements-container">
    <div class="main-heading">
        <i class="fas fa-bullhorn"></i> Announcements
    </div>

    <div class="flex justify-end mb-6">
        @if (isAdminOrStaff)
        {
            <a href="@Url.Action("Create")" class="btn-luxury flex items-center">
                <i class="fas fa-plus mr-2"></i> New Announcement
            </a>
        }
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded-lg shadow-md" role="alert">
            <p>@TempData["SuccessMessage"]</p>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="admin-card p-8 text-center">
            <p class="text-gray-600 text-lg">No announcements available.</p>
            @if (isAdminOrStaff)
            {
                <p class="mt-3">
                    <a href="@Url.Action("Create")" class="action-link">
                        Create the first announcement
                    </a>
                </p>
            }
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 gap-8">
            @foreach (var item in Model.OrderByDescending(a => a.PublishDate))
            {
                <div class="announcement-card">
                        <div class="flex justify-between items-start">
                        <h2 class="text-2xl font-semibold mb-2">
                            <a href="@Url.Action("Details", new { id = item.Id })" class="announcement-title">
                                    @item.Title
                                </a>
                            </h2>
                            
                            @if (!item.IsPublished)
                            {
                            <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-3 py-1 rounded-full shadow-sm">Draft</span>
                            }
                            else if (item.ExpireDate != null && item.ExpireDate < DateTime.Today)
                            {
                            <span class="bg-red-100 text-red-800 text-xs font-medium px-3 py-1 rounded-full shadow-sm">Expired</span>
                            }
                        </div>
                        
                    <div class="text-sm text-gray-600 mb-4 pb-3 border-b border-gray-200">
                            <span>
                            <i class="fas fa-calendar-alt mr-1"></i>
                                @(item.PublishDate.ToString("MMMM d, yyyy"))
                            </span>
                            <span class="mx-2">â€¢</span>
                            <span>
                            <i class="fas fa-user mr-1"></i>
                                @if (item.Creator != null)
                                {
                                    @(item.Creator.FirstName + " " + item.Creator.LastName)
                                }
                                else
                                {
                                    <span>Unknown User</span>
                                }
                            </span>
                        </div>
                        
                    <div class="text-gray-700 mb-5">
                            @{
                                var preview = item.Content.Length > 200 
                                    ? item.Content.Substring(0, 200) + "..." 
                                    : item.Content;
                            }
                            @Html.Raw(preview)
                        </div>
                        
                        <div class="flex justify-between items-center mt-4">
                        <a href="@Url.Action("Details", new { id = item.Id })" class="action-link font-medium">
                            Read more <i class="fas fa-arrow-right ml-1"></i>
                            </a>
                            
                            @if (isAdminOrStaff)
                            {
                            <div class="flex items-center space-x-3">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="action-link" title="Edit">
                                    <i class="fas fa-edit"></i>
                                    </a>
                                <a href="@Url.Action("Delete", new { id = item.Id })" class="delete-link" title="Delete">
                                    <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            }
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        // Add any client-side scripts here if needed
    </script>
} 